name: owoTrackVR Amethyst Device Workflow
on: [push]

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        id: checkout_code

      - name: Setup Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

          choco install -y sed cmake
          Import-Module "$env:ProgramData\Chocolatey\helpers\chocolateyProfile.psm1"
          Update-SessionEnvironment

      - name: Setup Cereal, Eigen, GLog & GFlags
        run: |
          Invoke-WebRequest -Uri 'https://github.com/microsoft/vswhere/releases/latest/download/vswhere.exe' -OutFile './vswhere.exe'
          $msbuild = "$("$(.\vswhere.exe -legacy -prerelease -products * -format json | Select-String -Pattern "2022" | `
              Select-String -Pattern "Studio" | Select-Object -First 1 | Select-String -Pattern "installationPath")" `
              -replace('"installationPath": "','') -replace('",',''))".Trim() + "\\MSBuild\\Current\\Bin\\MSBuild.exe"

          git clone https://github.com/USCiLab/cereal ./external/cereal

          git clone https://gitlab.com/libeigen/eigen ./external/eigen
          cd ./external/eigen
          git reset --hard 1fd5ce1002a6f30e1169b529b291216a18be2f7e
          cd ../..

          git clone https://github.com/google/glog.git ./external/glog
          cd ./external/glog
          mkdir vcbuild; cd ./vcbuild
          &"C:/Program Files/CMake/bin/cmake.exe" .. -DBUILD_SHARED_LIBS=ON
          &"$msbuild" glog.vcxproj "/p:Configuration=Release;Platform=x64"
          cd ../../..

          git clone https://github.com/gflags/gflags.git ./external/gflags
          cd ./external/gflags
          mkdir vcbuild; cd ./vcbuild
          &"C:/Program Files/CMake/bin/cmake.exe" .. -DBUILD_SHARED_LIBS=ON
          &"$msbuild" gflags.vcxproj "/p:Configuration=Release;Platform=x64"

      - name: Build The Device
        run: |
          Invoke-WebRequest -Uri 'https://github.com/microsoft/vswhere/releases/latest/download/vswhere.exe' -OutFile './vswhere.exe'
          $msbuild = "$("$(.\vswhere.exe -legacy -prerelease -products * -format json | Select-String -Pattern "2022" | `
               Select-String -Pattern "Studio" | Select-Object -First 1 | Select-String -Pattern "installationPath")" `
              -replace('"installationPath": "','') -replace('",',''))".Trim() + "\\MSBuild\\Current\\Bin\\MSBuild.exe"
          
          &"$msbuild" device_owoTrackVR.sln "/p:Configuration=Release;Platform=x64"

      - name: Get short commit SHA
        id: slug
        run: "$slug = '::set-output name=slug::' + $env:GITHUB_SHA.SubString(0,7); echo $slug"

      - name: Upload Devices' Artifact
        uses: actions/upload-artifact@v2
        with:
          name: device_owoTrackVR-Release-${{ steps.slug.outputs.slug }}
          path: x64/Release/devices
          if-no-files-found: error

      